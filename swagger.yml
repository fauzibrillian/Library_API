openapi: '3.0.2'
info:
  title: Library API
  version: '1.0'
servers:
  - url: https://api.server.test/v1
tags:
  - name: Books
    description: Everything about your Book
  - name: Racks
    description: Everything about your Rack Book
  - name: Users
    description: Operations about User
  - name: Transactions
    description: Operations about Transaction
  - name: Auth
    description: Operations about Auth
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Login into library
      description: ''
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: '9010370'
                password:
                  type: string
                  example: 'admin123'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
  /register:
    post:
      tags:
        - Auth
      summary: Register User into library
      description: ''
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: '092173'
                name:
                  type: string
                  example: 'udin'
                password:
                  type: string
                  example: 'udin123'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
  /users/{user_id}:
    patch:
      tags:
        - Users
      summary: Update user
      description: ''
      operationId: updateUser
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema: 
            type: integer
          example: 1
      requestBody:
        $ref: "#/components/requestBodies/updateUser"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              example:
                message: "success update users detail"
                data:
                  - user_id: 1
                    name: "Jamal"
                    phone: "08255"
                    avatar: "https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png"
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
    delete:
      tags:
        - Users
      summary: Delete users
      description: ''
      operationId: deleteUsers
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema: 
            type: integer
          example: 1
      responses:
        "204":
          description: "delete user successful"
          content:
            application/json:
              example:
                message: "success delete user"
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
    get:
      tags:
        - Users
      summary: Get users Detail
      description: ''
      operationId: getUsers
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema: 
            type: integer
          example: 1
      responses:
        "204":
          description: "Get users detail successful"
          content:
            application/json:
              example:
                message: "success get users detail"
                data:
                  - user_id: 1
                    name: "Jamal"
                    phone: "08255"
                    avatar: "https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png"
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
  /users:
    get:
      tags:
        - Users
      summary: Get users
      description: ''
      operationId: getAlluser
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page 
          required: false 
          schema: 
           type: integer
          example: 1
        - in: query
          name: pagesize 
          required: false 
          schema: 
           type: integer
          example: 2
        - name: name
          in: query
          schema:
            type: string
      responses:
        "201": 
          description: get users product
          content:
            application/json:
              schema: 
                type: object
                example:
                  message: "get all users successful"
                  pagination:
                    limit: 2
                    page: 1
                    total_page: 2
                  data:
                  - user_id: 1
                    name: "Jamal"
                    phone: "08255"
                    avatar: "https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png"
                  - user_id: 2
                    name: "Eko"
                    price: "021555"
                    avatar: "https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png"
                  - user_id: 3
                    name: "Budi"
                    price: "0866"
                    avatar: "https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png"
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
  /racks:
    post:
      tags:
        - Racks
      summary: Rack Book into library
      description: ''
      operationId: rackBooks
      security:
        - bearerAuth: []
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: row
          in: query
          required: true
          schema:
            type: integer
        - name: coloum
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Racks'
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
    get:
      tags:
        - Racks
      summary: Get All racks
      description: ''
      operationId: getAllRacks
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page 
          required: false 
          schema: 
           type: integer
          example: 1
        - in: query
          name: pagesize 
          required: false 
          schema: 
           type: integer
          example: 2
        - name: name
          in: query
          schema:
            type: string
      responses:
        "201": 
          description: get racks product
          content:
            application/json:
              schema: 
                type: object
                example:
                  message: "get all racks successful"
                  pagination:
                    limit: 2
                    page: 1
                    total_page: 2
                  data:
                  - rack_id: 1
                    name: 'R4'
                    row: 4
                    coloum: 5
                  - rack_id: 2
                    name: 'R6'
                    row: 2
                    coloum: 5
                  - rack_id: 3
                    name: 'R2'
                    row: 3
                    coloum: 5
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
  /racks/{rack_id}:
    get:
      tags:
        - Racks
      summary: Get racks
      description: ''
      operationId: getRacksByID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: rack_id
          required: true
          schema: 
            type: integer
          example: 1
      responses:
        "201": 
          description: get racks product
          content:
            application/json:
              schema: 
                type: object
                example:
                  message: "get racks successful"
                  data:
                  - rack_id: 1
                    name: 'R4'
                    row: 4
                    coloum: 5
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
    patch:
      tags:
        - Racks
      summary: Update Rack Book into library
      description: ''
      security:
        - bearerAuth: []
      operationId: updateRacks
      parameters:
        - in: path
          name: rack_id
          required: true
          schema: 
            type: integer
          example: 1
      requestBody:
        $ref: "#/components/requestBodies/updateRacks"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Racks'
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
    delete:
      tags:
        - Racks
      summary: Delete Rack Book into library
      description: ''
      security:
        - bearerAuth: []
      operationId: deleteRacks
      parameters:
        - in: path
          name: rack_id
          required: true
          schema: 
            type: integer
          example: 1
      responses:
        '204':
          description: "delete Racks successful"
          content:
            application/json:
              example:
                message: "success delete Racks"
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
  /books:
    post:
      tags:
        - Books
      summary: Books Book into library
      description: ''
      operationId: books
      security:
        - bearerAuth: []
      parameters:
        - name: tittle
          in: query
          required: true
          schema:
            type: string
        - name: publisher
          in: query
          required: true
          schema:
            type: string
        - name: author
          in: query
          required: true
          schema:
            type: string
        - name: picture
          in: query
          required: true
          schema:
            type: string
            format: binary
        - name: category
          in: query
          required: true
          schema:
            type: string
        - name: durability
          in: query
          required: true
          schema:
            type: integer
        - name: rack_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                type: object
                example:
                  message: "post books successful"
                  data:
                  book:
                    - book_id: 1
                      tittle: 'Harry Potter'
                      author: 'JH. Ronald'
                      picture: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                      category: 'Fiction'
                      durability: 75
                  rack:
                    - rack_id: 1
                      name: 'R2'
                      coloum: 5
                      row: 2
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
    get:
      tags:
        - Books
      summary: Get All Books
      description: ''
      operationId: getAllBooks
      parameters:
        - in: path
          name: id
          required: true
          schema: 
            type: integer
          example: 1
      responses:
        "201": 
          description: get books product
          content:
            application/json:
              schema: 
                type: object
                example:
                  message: "get all books successful"
                  pagination:
                    limit: 2
                    page: 1
                    total_page: 2
                  data:
                  - book_id: 1
                    tittle: 'Harry Potter'
                    author: 'JH. Ronald'
                    picture: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                  - book_id: 2
                    tittle: 'Laskar Pelangi'
                    author: 'Toto Keidi'
                    picture: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
  /books/{books_id}:
    get:
      tags:
        - Books
      summary: Get Books
      description: ''
      operationId: getBooksByID
      parameters:
        - in: path
          name: book_id
          required: true
          schema: 
            type: integer
          example: 1
      responses:
        "201": 
          description: get books product
          content:
            application/json:
              schema: 
                type: object
                example:
                  message: "get books successful"
                  data:
                  book:
                    - book_id: 1
                      tittle: 'Harry Potter'
                      author: 'JH. Ronald'
                      picture: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                      category: 'Fiction'
                      durability: 75
                  rack:
                    - rack_id: 1
                      name: 'R4'
                      coloum: 5
                      row: 7
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
    patch:
      tags:
        - Books
      summary: update Books
      description: ''
      operationId: updateBooksByID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: book_id
          required: true
          schema: 
            type: integer
          example: 1
      requestBody:
        $ref: "#/components/requestBodies/updateBooks"
      responses:
        "201": 
          description: update books product
          content:
            application/json:
              schema: 
                type: object
                example:
                  message: "Update books successful"
                  data:
                  book:
                    - book_id: 1
                      tittle: 'Harry Potter'
                      author: 'JH. Ronald'
                      picture: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                      category: 'Fiction'
                      durability: 75
                  rack:
                    - rack_id: 1
                      name: 'R4'
                      coloum: 5
                      row: 7
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
    delete:
      tags:
        - Books
      summary: Delete book into library
      description: ''
      security:
        - bearerAuth: []
      operationId: deletebooks
      parameters:
        - in: path
          name: book_id
          required: true
          schema: 
            type: integer
          example: 1
      responses:
        '204':
          description: "delete Books successful"
          content:
            application/json:
              example:
                message: "success delete Books"
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"

  /transactions:
    post:
      tags:
        - Transactions
      summary: Transactions Book into library
      description: ''
      operationId: transactions
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
        - name: book_id
          in: query
          required: true
          schema:
            type: integer
        - name: date_borrow
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: date_return
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: date_should_return
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        "201": 
          description: Post transactions
          content:
            application/json:
              schema: 
                type: object
                example:
                  message: "Post transactions successful"
                  data:
                  user:
                    - user_id: 2
                      name: 'udin'
                      phone: 90702130
                      avatar: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                  book:
                    - book_id: 1
                      tittle: 'Harry Potter'
                      author: 'JH. Ronald'
                      picture: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                      category: 'Fiction'
                      durability: 75
                  date_borrow: '2024-07-21T17:32:28Z'
                  date_return: '2024-08-21T17:32:28Z'
                  date_should_return: '2024-07-25T17:32:28Z'
        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"
    get:
      tags:
        - Transactions
      summary: All Transactions Book into library
      description: ''
      operationId: alltransactions
      security:
        - bearerAuth: []
      parameters:
        - name: id_transaction
          in: query
          required: true
          schema:
            type: integer
      responses:
        "201": 
          description: update books product
          content:
            application/json:
              schema: 
                type: object
                example:
                  message: "Update books successful"
                  data:
                    user:
                      - user_id: 2
                        name: 'udin'
                        phone: '90702130'
                        avatar: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                    book:
                      - book_id: 1
                        tittle: 'Harry Potter'
                        author: 'JH. Ronald'
                        picture: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                        category: 'Fiction'
                        durability: 75
                    date_borrow: '2024-07-21T17:32:28Z'
                    date_return: '2024-08-21T17:32:28Z'
                    date_should_return: '2024-07-25T17:32:28Z'
                  properties:
                      user:
                        - user_id: 2
                          name: 'udin'
                          phone: '90702130'
                          avatar: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                      book:
                        - book_id: 1
                          tittle: 'Harry Potter'
                          author: 'JH. Ronald'
                          picture: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                          category: 'Fiction'
                          durability: 75
                      date_borrow: '2024-07-21T17:32:28Z'
                      date_return: '2024-08-21T17:32:28Z'
                      date_should_return: '2024-07-25T17:32:28Z'

        '400':
          $ref: "#/components/responses/400"
        '401':
          $ref: "#/components/responses/401"
        '405':
          $ref: "#/components/responses/405"
        '500':
          $ref: "#/components/responses/500"

  /transactions/{transaction_id}:
      get:
        tags:
          - Transactions
        summary: Transactions details
        description: ''
        operationId: TransactionsbyID
        security:
          - bearerAuth: []
        parameters:
          - name: transaction_id
            in: query
            required: true
            schema:
              type: integer
        responses:
          "201": 
            description: get transactions
            content:
              application/json:
                schema: 
                  type: object
                  example:
                    message: "get transactions successful"
                    data:
                      user:
                        - user_id: 2
                          name: 'udin'
                          phone: '90702130'
                          avatar: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                      book:
                        - book_id: 1
                          tittle: 'Harry Potter'
                          author: 'JH. Ronald'
                          picture: 'https://res.cloudinary.com/dekr35x5t/image/upload/v1702476230/be_Hi_Spec/htegoywm9rjdiepbjnzx.png'
                          category: 'Fiction'
                          durability: 75
                      date_borrow: '2024-07-21T17:32:28Z'
                      date_return: '2024-08-21T17:32:28Z'
                      date_should_return: '2024-07-25T17:32:28Z'
          '400':
            $ref: "#/components/responses/400"
          '401':
            $ref: "#/components/responses/401"
          '405':
            $ref: "#/components/responses/405"
          '500':
            $ref: "#/components/responses/500"



    
components:
  schemas:
    Register:
      type: object
      properties:
        message:
          type: string
          example: 'Register successfully'
        data:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 10
            phone:
              type: string
              example: '12345'
            name:
              type: string
              example: theUser
            password:
              type: string
              example: '12345'
            role:
              type: string
              description: Role Status
              example: 'user'
    Login:
      type: object
      properties:
          message:
            type: string
            example: 'Login successfully'
          data:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 10
              phone:
                type: string
                example: '12345'
              name:
                type: string
                example: theUser
              token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDUwNDAzNjU3MzIsImlhdCI6MTcwNTAzODU2NTczMiwiaWQiOjEsInJvbGUiOiJhZG1pbiJ9.kHm8kFxSzAFQu7tj-YnCUFsTMjxa7Gdw7bueFyVDVgI
              role:
                type: string
                description: Role Status
                example: 'user'
    Racks:
      type: object
      properties:
          data:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              name:
                type: string
                example: 'R1'
              row:
                type: integer
                format: int64
                example: 2
              coloum:
                type: integer
                format: int64
                example: 5
    User:
      type: object
      properties:
        message:
          type: string
          example: 'Update User sucessfully'
        data:
          type: object
          properties:
              name:
                type: string
                example: 'R1'
              phone:
                type: string
                example: '07346'
              avatar:
                type: string
                format: binary
                example: '18962387egWJADv'
    Book:
      type: object
      properties:
        message:
          type: string
          example: 'Update Book sucessfully'
        data:
          type: object
          properties:
              tittle:
                type: string
                example: 'Harry Potter'
              publisher:
                type: string
                example: 'Gramedia Sukses'
              author:
                type: string
                example: 'PJ. Arnold'
              picture:
                type: string
                format: binary
                example: 'www.cloudinary.com/iugwd8728iiuaw'
              category:
                type: string
                example: 'Fiction'
              durability:
                type: integer
                example: 75
              rack_book:
                type: object
                properties:
                  rack_id:
                    type: integer
                    example: 1
  requestBodies:
    updateBooks:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Book"
    updateUser:
      content:
        application/json:
          schema: 
            $ref: "#/components/schemas/User"
    updateRacks:
      content:
        application/json:
          schema: 
            $ref: "#/components/schemas/Racks"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    "400":
      description: "bad request"
      content:
        application/json:
          example:
            message: "bad request"
    "401":
      description: "unauthorized"
      content:
        application/json:
          example:
            message: "unauthorized"
    "404":
      description: "not found"
      content:
        application/json:
          example:
            message: "not found"
    "405":
      description: "method not allowed"
      content:
        application/json:
          example:
            message: "method not allowed"
    "500":
      description: "internal server error"
      content:
        application/json:
          example:
            message: "internal server error"
